Data FULL OUTER JOIN meta:

 private String fileStatusQueryV1 = "WITH DAT AS \n"
        + "(\n"
        + "SELECT * FROM IM_OWNER.FILE_STATUS_DATA WHERE PROCESS_DATE = DATE %s\n"
        + "),\n"
        + "META AS \n"
        + "(\n"
        + "SELECT * FROM IM_OWNER.FILE_STATUS_META WHERE PROCESS_DATE = DATE %s\n"
        + ")\n"
        + "SELECT \n"
        + "COALESCE(D.PROCESS_DATE,M.PROCESS_DATE) PROCESS_DATE,\n"
        + "COALESCE(D.SUBMITTER_ID,M.SUBMITTER_ID) SUBMITTER_ID,\n"
        + "COALESCE(D.DERIVED_REPORTER_CRD,M.DERIVED_REPORTER_CRD) DERIVED_REPORTER_CRD,\n"
        + "COALESCE(D.REPORTER_ID,M.REPORTER_ID) REPORTER_ID,\n"
        + "COALESCE(D.UPLOAD_USER_NAME,M.UPLOAD_USER_NAME) UPLOAD_USER_NAME,\n"
        + "D.FILENAME DATAFILE_NAME, \n"
        + "M.FILENAME PAIRED_META_FILENAME,\n"
        + "COALESCE(D.UPLOAD_TIMESTAMP,M.UPLOAD_TIMESTAMP) UPLOAD_TIMESTAMP,\n"
        + "COALESCE(D.UPLOAD_SOURCE,M.UPLOAD_SOURCE) UPLOAD_SOURCE,\n"
        + "COALESCE(D.ACKNOWLEDGE_CREATE_TS,M.ACKNOWLEDGE_CREATE_TS) ACKNOWLEDGE_TS,\n"
        + "COALESCE(D.ACKNOWLEDGE_RESULT,M.ACKNOWLEDGE_RESULT) ACKNOWLEDGE_RESULT,\n"
        + "COALESCE(D.INTEGRITY_END_TS,M.INTEGRITY_END_TS) INTEGRITY_TS,\n"
        + "CASE WHEN COALESCE(D.ACKNOWLEDGE_RESULT,M.ACKNOWLEDGE_RESULT) = 'SUCCESS'\n"
        + "THEN CASE \n"
        + "WHEN COALESCE(D.INTEGRITY_RESULT,M.INTEGRITY_RESULT) IS NOT NULL THEN COALESCE(D.INTEGRITY_RESULT,M.INTEGRITY_RESULT)  \n"
        + "WHEN COALESCE(D.INTEGRITY_RESULT,M.INTEGRITY_RESULT) IS NULL AND COALESCE(D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD,"
        + "M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD) IS NOT NULL THEN 'TIMEOUT'\n"
        + "WHEN COALESCE(D.INTEGRITY_RESULT,M.INTEGRITY_RESULT) IS NULL AND COALESCE(D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD,"
        + "M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD) IS NULL THEN 'DUPLICATE' END\n"
        + "ELSE COALESCE(D.INTEGRITY_RESULT,M.INTEGRITY_RESULT)        \n"
        + "END AS INTEGRITY_RESULT,\n"
        + "D.INGESTION_END_TS INGESTION_TS,\n"
        + "COALESCE(D.INGESTION_ACCEPTED_RECORDS,0) + COALESCE(D.INGESTION_REJECTED_RECORDS,0) RECEIVED_RECORDS,\n"
        + "COALESCE(D.INGESTION_ACCEPTED_RECORDS,0) ACCEPTED_RECORDS,\n"
        + "COALESCE(D.INGESTION_REJECTED_RECORDS,0) REJECTED_RECORDS\n"
        + "FROM DAT D FULL OUTER JOIN META M \n"
        + "ON D.ASSOCIATED_META_FILE_BDATA_ID = M.ASSOCIATED_META_FILE_BDATA_ID\n"
        + "WHERE %s"
        + "%s";
		
---------------------------------------------------------------------------------------------------------------------------------
Updated query.
Data Left join META
UNION
Meta

    public String fileStatusQueryV2 = "SELECT * FROM \n"
        + "( \n"
        + "SELECT  \n"
        + "D.PROCESS_DATE, \n"
        + "D.SUBMITTER_ID, \n"
        + "D.REPORTER_ID, \n"
        + "D.DERIVED_REPORTER_CRD, \n"
        + "D.UPLOAD_USER_NAME, \n"
        + "D.FILENAME,  \n"
        + "M.FILENAME PAIRED_META_FILENAME, \n"
        + "D.UPLOAD_TIMESTAMP, \n"
        + "D.UPLOAD_SOURCE, \n"
        + "D.ACKNOWLEDGE_CREATE_TS, \n"
        + "D.ACKNOWLEDGE_RESULT, \n"
        + "D.INTEGRITY_END_TS, \n"
        + "CASE WHEN D.ACKNOWLEDGE_RESULT = 'SUCCESS' \n"
        + "THEN CASE  \n"
        + "		WHEN D.INTEGRITY_RESULT IS NOT NULL THEN D.INTEGRITY_RESULT \n"
        + "		WHEN D.INTEGRITY_RESULT IS NULL AND D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NOT NULL THEN 'TIMEOUT' \n"
        + "		WHEN D.INTEGRITY_RESULT IS NULL AND D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NULL THEN 'DUPLICATE' \n"
        + "	 END \n"
        + "ELSE D.INTEGRITY_RESULT END AS INTEGRITY_RESULT, \n"
        + "D.INGESTION_END_TS, \n"
        + "D.INGESTION_ACCEPTED_RECORDS + D.INGESTION_REJECTED_RECORDS RECEIVED_RECORDS, \n"
        + "D.INGESTION_ACCEPTED_RECORDS ACCEPTED_RECORDS, \n"
        + "D.INGESTION_REJECTED_RECORDS REJECTED_RECORDS \n"
        + "FROM IM_OWNER.FILE_STATUS_DATA D \n"
        + "LEFT JOIN IM_OWNER.FILE_STATUS_META M ON D.ASSOCIATED_META_FILE_BDATA_ID = M.ASSOCIATED_META_FILE_BDATA_ID \n"
        + "WHERE %s \n"
        + "UNION \n"
        + "SELECT  \n"
        + "M.PROCESS_DATE, \n"
        + "M.SUBMITTER_ID, \n"
        + "M.REPORTER_ID, \n"
        + "M.DERIVED_REPORTER_CRD, \n"
        + "M.UPLOAD_USER_NAME, \n"
        + "M.FILENAME,  \n"
        + "NULL PAIRED_META_FILENAME, \n"
        + "M.UPLOAD_TIMESTAMP, \n"
        + "M.UPLOAD_SOURCE, \n"
        + "M.ACKNOWLEDGE_CREATE_TS, \n"
        + "M.ACKNOWLEDGE_RESULT, \n"
        + "M.INTEGRITY_END_TS, \n"
        + "CASE WHEN M.ACKNOWLEDGE_RESULT = 'SUCCESS' \n"
        + "THEN CASE  \n"
        + "WHEN M.INTEGRITY_RESULT IS NOT NULL THEN M.INTEGRITY_RESULT \n"
        + "WHEN M.INTEGRITY_RESULT IS NULL AND M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NOT NULL THEN 'TIMEOUT' \n"
        + "WHEN M.INTEGRITY_RESULT IS NULL AND M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NULL THEN 'DUPLICATE' \n"
        + "END \n"
        + "ELSE M.INTEGRITY_RESULT END AS INTEGRITY_RESULT, \n"
        + "NULL INGESTION_END_TS, \n"
        + "NULL RECEIVED_RECORDS, \n"
        + "NULL ACCEPTED_RECORDS, \n"
        + "NULL REJECTED_RECORDS \n"
        + "FROM IM_OWNER.FILE_STATUS_META M \n"
        + "WHERE %s ) X \n"
        + "%s";


-----------------------------------------------------------------------
Version2 with some where and sort clause

SELECT * FROM 
( 
SELECT  
D.PROCESS_DATE, 
D.SUBMITTER_ID, 
D.REPORTER_ID, 
D.DERIVED_REPORTER_CRD, 
D.UPLOAD_USER_NAME, 
D.FILENAME,  
M.FILENAME PAIRED_META_FILENAME, 
D.UPLOAD_TIMESTAMP, 
D.UPLOAD_SOURCE, 
D.ACKNOWLEDGE_CREATE_TS, 
D.ACKNOWLEDGE_RESULT, 
D.INTEGRITY_END_TS, 
CASE WHEN D.ACKNOWLEDGE_RESULT = 'SUCCESS' 
THEN CASE  
		WHEN D.INTEGRITY_RESULT IS NOT NULL THEN D.INTEGRITY_RESULT 
		WHEN D.INTEGRITY_RESULT IS NULL AND D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NOT NULL THEN 'TIMEOUT' 
		WHEN D.INTEGRITY_RESULT IS NULL AND D.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NULL THEN 'DUPLICATE' 
	 END 
ELSE D.INTEGRITY_RESULT END AS INTEGRITY_RESULT, 
D.INGESTION_END_TS, 
D.INGESTION_ACCEPTED_RECORDS + D.INGESTION_REJECTED_RECORDS RECEIVED_RECORDS, 
D.INGESTION_ACCEPTED_RECORDS ACCEPTED_RECORDS, 
D.INGESTION_REJECTED_RECORDS REJECTED_RECORDS 
FROM IM_OWNER.FILE_STATUS_DATA D 
LEFT JOIN IM_OWNER.FILE_STATUS_META M ON D.ASSOCIATED_META_FILE_BDATA_ID = M.ASSOCIATED_META_FILE_BDATA_ID 
WHERE  D.PROCESS_DATE = '2020-01-07' AND D.SUBMITTER_ID = '79' 
UNION 
SELECT  
M.PROCESS_DATE, 
M.SUBMITTER_ID, 
M.REPORTER_ID, 
M.DERIVED_REPORTER_CRD, 
M.UPLOAD_USER_NAME, 
M.FILENAME,  
NULL PAIRED_META_FILENAME, 
M.UPLOAD_TIMESTAMP, 
M.UPLOAD_SOURCE, 
M.ACKNOWLEDGE_CREATE_TS, 
M.ACKNOWLEDGE_RESULT, 
M.INTEGRITY_END_TS, 
CASE WHEN M.ACKNOWLEDGE_RESULT = 'SUCCESS' 
THEN CASE  
WHEN M.INTEGRITY_RESULT IS NOT NULL THEN M.INTEGRITY_RESULT 
WHEN M.INTEGRITY_RESULT IS NULL AND M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NOT NULL THEN 'TIMEOUT' 
WHEN M.INTEGRITY_RESULT IS NULL AND M.INTEGRITY_TIMEOUT_ERROR_USAGE_CD IS NULL THEN 'DUPLICATE' 
END 
ELSE M.INTEGRITY_RESULT END AS INTEGRITY_RESULT, 
NULL INGESTION_END_TS, 
NULL RECEIVED_RECORDS, 
NULL ACCEPTED_RECORDS, 
NULL REJECTED_RECORDS 
FROM IM_OWNER.FILE_STATUS_META M 
WHERE  M.PROCESS_DATE = '2020-01-07' AND M.SUBMITTER_ID = '79' ) X 
 ORDER BY UPLOAD_TIMESTAMP DESC NULLS FIRST